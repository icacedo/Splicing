SAMPLES=[
	"SRR5811862.subset",
	"SRR5811882.subset"
]
'''
rule all:
	input:
		expand("HTS_output/{sample}.htsStats.json", sample=SAMPLES),
		expand("HTS_output/{sample}.htstream_SE.fastq.gz", sample=SAMPLES)

rule stream_hts:
	input:
		mrna = "data/subset/{sample}.fastq.gz",
		rrna = "references/celegans_rrna.fasta"
	output:
		multiext("HTS_output/{sample}", ".htsStats.json", \
		".htstream_SE.fastq.gz")
	shell:
		"hts_Stats -L HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'initial stats' -U {input.mrna} | "
		"hts_SeqScreener -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'screen phix' | "
		"hts_SeqScreener -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'count the number of rRNA reads' -r -s {input.rrna} | "
		"hts_PolyATTrim -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'trim adapters' | "
		"hts_NTrimmer -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'remove any remaining 'N' characters' | "
		"hts_QWindowTrim -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'quality trim the ends of reads' | "
		"hts_LengthFilter -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'remove reads < 50 bp' -n -m 50 | "
		"hts_Stats -A HTS_output/{wildcards.sample}.htsStats.json "
		"-f HTS_output/{wildcards.sample}.htstream > HTS_output/out.tab"
'''		
EXTS=[
	"1.ht2", 
	"2.ht2", 
	"3.ht2", 
	"4.ht2",
	"5.ht2", 
	"6.ht2", 
	"7.ht2", 
	"8.ht2"
]

REFGEN="references/1pct_elegans.fa"

rule all:
	input:
		expand("HISAT2_index/{sample}.{ext}", sample=SAMPLES, ext=EXTS)
		
rule build_index:
	output:
		multiext("HISAT2_index/{sample}.", "1.ht2", "2.ht2", "3.ht2", "4.ht2", \
		"5.ht2", "6.ht2", "7.ht2", "8.ht2")
	params:
		ref=REFGEN
	shell:		
		"hisat2-build {params.ref} HISAT2_index/{wildcards.sample}"
		
rule get_junctions:
	output:
	input:
	shell:
		"hisat2 -x HISAT2_index/{wildcards.sample} -U 
		
		
		
		
		
		
		
		
		
		
