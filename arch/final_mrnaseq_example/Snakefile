# NCBI SRA Run Selector accession number PRJNA393447
# from Muir et al 2018
# wildtype N2: SRR5811862
# smg-1(r910): SRR5811882
# wget https://trace.ncbi.nlm.nih.gov/Traces/sra-reads-be/fastq?acc=SRR5811862
# wget https://trace.ncbi.nlm.nih.gov/Traces/sra-reads-be/fastq?acc=SRR5811882
# 100K read subset of each
# reference genome from: https://downloads.wormbase.org/releases/WS282/species/c_elegans/PRJNA13758/c_elegans.PRJNA13758.WS282.genomic.fa.gz
# genome gff from: https://downloads.wormbase.org/releases/WS282/species/c_elegans/PRJNA13758/c_elegans.PRJNA13758.WS282.annotations.gff3.gz
# rrna reads from NCBI > Taxonomy: caenorhabditis elegans > nucleotide > rRNA > send to > fasta

SAMPLES=[
	"smg1.subset",
	"wt.subset"
]

EXTS=[
	"Aligned.sortedByCoord.out.bam",
	"Log.final.out",
	"Log.out",
	"Log.progress.out",
	"ReadsPerGene.out.tab",
	"Signal.UniqueMultiple.str1.out.bg",
	"Signal.UniqueMultiple.str2.out.bg",
	"Signal.Unique.str1.out.bg",
	"Signal.Unique.str2.out.bg",
	"SJ.out.tab"
]

REFrRNA="reference/celegans_rrna.fasta"
REFGEN="reference/1pct_elegans.PRJNA13758.WS282.genomic.fa"
REFGTF="reference/c_elegans.PRJNA13758.WS282.canonical_geneset.gtf"
STAR_genomeSAindexNbases=8


rule all:
	input:
		expand("HTS_output/{sample}.htsStats.json", sample=SAMPLES),
		expand("HTS_output/{sample}.htstream_SE.fastq.gz", sample=SAMPLES),
		directory("star_index/"),
		expand("star_results/{sample}.star.{ext}", sample=SAMPLES, ext=EXTS)

rule stream_hts:
	input:
		"data/{sample}.fastq"
	output:
		multiext("HTS_output/{sample}", ".htsStats.json", \
		".htstream_SE.fastq.gz")
	params:
		rrna=REFrRNA
	shell:
		"hts_Stats -L HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'initial stats' -U {input} | "
		"hts_SeqScreener -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'screen phix' | "
		"hts_SeqScreener -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'count the number of rRNA reads' -r -s {params.rrna} | "
		"hts_PolyATTrim -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'trim adapters' | "
		"hts_NTrimmer -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'remove any remaining 'N' characters' | "
		"hts_QWindowTrim -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'quality trim the ends of reads' | "
		"hts_LengthFilter -A HTS_output/{wildcards.sample}.htsStats.json "
		"-N 'remove reads < 50 bp' -n -m 50 | "
		"hts_Stats -A HTS_output/{wildcards.sample}.htsStats.json "
		"-f HTS_output/{wildcards.sample}.htstream > HTS_output/out.tab"

rule build_star_index:
	output:
		directory("star_index/")
	params:
		ref=REFGEN,
		str_len=STAR_genomeSAindexNbases,
		gtf=REFGTF
	shell:
		"STAR --runMode genomeGenerate --genomeSAindexNbases {params.str_len} "
		"--genomeDir star_index/ --genomeFastaFiles {params.ref} --sjdbGTFfile "
		"{params.gtf}"

rule align_count_star:
	input:
		"HTS_output/{sample}.htstream_SE.fastq.gz"
	output:
		multiext("star_results/{sample}.star", \
		".Aligned.sortedByCoord.out.bam", ".Log.final.out", ".Log.out", \
		".Log.progress.out", ".ReadsPerGene.out.tab", \
		".Signal.UniqueMultiple.str1.out.bg", \
		".Signal.UniqueMultiple.str2.out.bg", ".Signal.Unique.str1.out.bg", \
		".Signal.Unique.str2.out.bg", ".SJ.out.tab")
	shell:
		"STAR --genomeDir star_index/ --outSAMtype BAM SortedByCoordinate "
		"--readFilesCommand zcat --readFilesIn {input} --quantMode GeneCounts "
		"--outFileNamePrefix star_results/{wildcards.sample}.star. "
		"--outWigType bedGraph"





















